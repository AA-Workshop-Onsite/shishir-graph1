name: Setup Studio Account

on:
  workflow_run:
    workflows: ["Initial Setup"]
    types:
      - completed

env:
  GEN: "-2023-4"
  APOLLO_KEY: ${{ vars.TOKEN }}

jobs:
  publish:
    uses: ./.github/workflows/publish-subgraph.yml
    secrets: inherit

  pqs:
    runs-on: ubuntu-latest
    steps:
      - name: Create PQ List
        run: |
          curl --request POST \
            --header 'content-type: application/json' \
            --header 'X-API-Key: ${{ secrets.APOLLO_USER_KEY }}' \
            --url 'https://graphql.api.apollographql.com/api/graphql' \
            --data '{"query":"mutation Mutation($graphId: ID!, $name: String!, $description: String, $linkedVariants: [String!]) {\n  graph(id: $graphId) {\n    createPersistedQueryList(name: $name, description: $description, linkedVariants: $linkedVariants) {\n      ... on CreatePersistedQueryListResult {\n        persistedQueryList {\n          id\n    createdAt\n        }\n      }\n    }\n  }\n}","variables":{"graphId":"${{github.actor}}${{ env.GEN }}","name":"pq_list","description":"Our PQ List","linkedVariants":["current"]}}' -o pq.json
          cat pq.json

      - name: Set Env
        run: echo "PQ_ID=$(cat pq.json | jq .data.graph.createPersistedQueryList.id)" >> $GITHUB_ENV

      - name: Install Rover
        run: | 
          curl -sSL https://rover.apollo.dev/nix/v0.19.0 | sh
          echo "$HOME/.rover/bin" >> $GITHUB_PATH

      - name: Checkout
        uses: actions/checkout@v3

      - name: Publish PQ List          
        run: | 
          rover persisted-queries publish --graph-id ${{github.actor}}${{env.GEN}} --list-id ${{env.PQ_ID}} \
            --manifest ./final/workshop-pq-manifest.json

  deploy:
    needs: publish
    uses: ./.github/workflows/deploy-router.yml
    secrets: inherit

  install-url:
    needs: deploy
    runs-on: ubuntu-latest
    steps: 
      - name: Get URL
        run: | 
          gcloud run services describe ${{github.actor}}-router --region us-central1 --format 'value(status.url)' > url.json
          echo "URL=$(cat url.json)" >> $GITHUB_ENV
      - name: Set URL
        run: |
          curl --request POST \
            --header 'content-type: application/json' \
            --header 'X-API-Key: ${{ secrets.APOLLO_USER_KEY }}' \
            --url 'https://graphql.api.apollographql.com/api/graphql' \
            --data '{"query":"mutation UpdateURL($name: String!, $graphId: ID!, $url: String) {\n  graph(id: $graphId) {\n    variant(name: $name) {\n      updateURL(url: $url) {\n        createdAt\n      }\n    }\n  }\n}","variables":{"name":"current","graphId":"${{github.actor}}${{ env.GEN }}","url":"${{ env.URL }}"}}'
          

